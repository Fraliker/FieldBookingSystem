{"version":3,"sources":["../src/routes/field-type-route.ts"],"names":[],"mappings":";;AAAA,qCAAgE;AAChE,IAAI,gBAAgB,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAGhE;IAIE;;OAEG;IACH;QACE,IAAI,CAAC,MAAM,GAAG,gBAAM,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAID;;;OAGG;IACH,IAAI;QAEF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG;YACxC,gBAAgB,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAzBD,0CAyBC;AAED,uEAAuE;AACvE,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;AAC9C,eAAe,CAAC,IAAI,EAAE,CAAC;AAEvB,kBAAe,eAAe,CAAC,MAAM,CAAC","file":"field-type-route.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nvar FieldTypeService = require('../services/fieldType-service');\r\n\r\n\r\nexport class FieldTypeRouter {\r\n  public router: Router\r\n  \r\n\r\n  /**\r\n   * Initialize the FieldTypeRouter\r\n   */\r\n  constructor() {\r\n    this.router = Router();\r\n    this.init();\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * Take each handler, and attach to one of the Express.Router's\r\n   * endpoints.\r\n   */\r\n  init() {\r\n    \r\n    this.router.get('/api/fieldType/', (req, res) => {\r\n        FieldTypeService.retrieveAllFieldTypes(res);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// Create the FieldTypeRouter, and export its configured Express.Router\r\nconst FieldTypeRoutes = new FieldTypeRouter();\r\nFieldTypeRoutes.init();\r\n\r\nexport default FieldTypeRoutes.router;"],"sourceRoot":".."}