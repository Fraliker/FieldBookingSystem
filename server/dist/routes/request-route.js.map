{"version":3,"sources":["../src/routes/request-route.ts"],"names":[],"mappings":";;AAAA,qCAAgE;AAChE,2BAA2B;AAC3B,IAAI,cAAc,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAK5D;IAKE;;OAEG;IACH;QACE,IAAI,CAAC,MAAM,GAAG,gBAAM,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAGD;;;OAGG;IACH,IAAI;QAEF,iCAAiC;QACjC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,CAAC,GAAG,EAAE,GAAG;YACpD,IAAI,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;YACjC,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC9C,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAChC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,2BAA2B,EAAE,CAAC,GAAG,EAAE,GAAG;YAClD,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,cAAc,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACjD,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,GAAG;YAC7C,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACxC,cAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,EAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAC,CAAC,CAAC;YAClF,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,CAAC,GAAG,EAAE,GAAG;YACpD,IAAI,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;YACjC,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC9C,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,GAAG;YAC9C,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,cAAc,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACxC,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAIH,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,CAAC,GAAG,EAAE,GAAG;YAChD,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;YACrC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,GAAG,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IAGL,CAAC;CAEF;AApED,sCAoEC;AAED,qEAAqE;AACrE,MAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AAC1C,aAAa,CAAC,IAAI,EAAE,CAAC;AAErB,kBAAe,aAAa,CAAC,MAAM,CAAC","file":"request-route.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport * as url from 'url';\r\nvar RequestService = require('../services/request-service');\r\n\r\n\r\n\r\n\r\nexport class RequestRouter {\r\n  public router: Router\r\n  private idGenerator: number;\r\n  \r\n\r\n  /**\r\n   * Initialize the ListRouter\r\n   */\r\n  constructor() {\r\n    this.router = Router();\r\n    this.init();\r\n  }\r\n\r\n\r\n  /**\r\n   * Take each handler, and attach to one of the Express.Router's\r\n   * endpoints.\r\n   */\r\n  init() {\r\n    \r\n    // getting all requests for admin\r\n    this.router.get('/api/request/admin/:adminId', (req, res) => {\r\n        var adminId = req.params.adminId;\r\n        RequestService.retrieveRequests(res, adminId);\r\n        return res;\r\n    });\r\n\r\n    // getting all requests for user\r\n    this.router.get('/api/request/user/:userId', (req, res) => {\r\n        var userId = req.params.userId;\r\n        RequestService.retrieveUserRequests(res, userId);\r\n        return res;\r\n    });\r\n\r\n    // getting details of a single request\r\n    this.router.get('/api/request/details', (req, res) => {\r\n        var urlParts = url.parse(req.url, true);\r\n        RequestService.retrieveRequestDetails(res, {requestId: urlParts.query.requestId});\r\n        return res;\r\n    });\r\n\r\n    // getting all requests for one field\r\n    this.router.get('/api/request/field/:fieldId', (req, res) => {\r\n        var fieldId = req.params.fieldId;\r\n        RequestService.retrieveRequests(res, fieldId);\r\n        return res;\r\n    });\r\n\r\n    // adding a new field request\r\n    this.router.post('/api/request/:userId', (req, res) => {  \r\n        var userId = req.params.userId;\r\n        var jsonObj = req.body;\r\n        RequestService.addRequest(res, jsonObj);\r\n        return res;\r\n    });\r\n\r\n    \r\n\r\n    // updating an existing field request\r\n    this.router.put('/api/request/:requestId', (req, res) => {  \r\n        var requestId = req.params.requestId;\r\n        var jsonObj = req.body;\r\n        var id = RequestService.addRequest(jsonObj);\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n// Create the RequestRouter, and export its configured Express.Router\r\nconst requestRoutes = new RequestRouter();\r\nrequestRoutes.init();\r\n\r\nexport default requestRoutes.router;"],"sourceRoot":".."}