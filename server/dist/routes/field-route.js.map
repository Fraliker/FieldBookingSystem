{"version":3,"sources":["../src/routes/field-route.ts"],"names":[],"mappings":";;AAAA,qCAAgE;AAChE,2BAA2B;AAC3B,IAAI,YAAY,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAExD;IAIE;;OAEG;IACH;QACE,IAAI,CAAC,MAAM,GAAG,gBAAM,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAGD;;;OAGG;IACH,IAAI;QAEF,2BAA2B;QAC3B,sDAAsD;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG;YACrC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACxC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAE9B,IAAI,GAAG,GAAG,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC;YACrC,YAAY,CAAC,uBAAuB,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC7E,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,qBAAqB;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG;YACtC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,iBAAiB;QACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,GAAG;YAC7C,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAjDD,kCAiDC;AAED,kEAAkE;AAClE,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AACtC,WAAW,CAAC,IAAI,EAAE,CAAC;AAEnB,kBAAe,WAAW,CAAC,MAAM,CAAC","file":"field-route.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport * as url from 'url';\r\nvar FieldService = require('../services/field-service');\r\n\r\nexport class FieldRouter {\r\n  public router: Router\r\n  \r\n\r\n  /**\r\n   * Initialize the ListRouter\r\n   */\r\n  constructor() {\r\n    this.router = Router();\r\n    this.init();\r\n  }\r\n\r\n\r\n  /**\r\n   * Take each handler, and attach to one of the Express.Router's\r\n   * endpoints.\r\n   */\r\n  init() {\r\n    \r\n    // getting available fields\r\n    // query parameters: date, time, city, state, duration\r\n    this.router.get('/api/fields/', (req, res) => {\r\n        var urlParts = url.parse(req.url, true);\r\n        var query = urlParts.query;\r\n        \r\n        var date = query.date;\r\n        var time = query.time;\r\n        var city = query.city;\r\n        var state = query.state;\r\n        var duration = query.duration; \r\n\r\n        var msg = 'search for ' + query.var1;\r\n        FieldService.retrieveAvailableFields(res, date, time, city, state, duration);\r\n        return res;\r\n    });\r\n\r\n    // posting new fields\r\n    this.router.post('/api/fields/', (req, res) => {  \r\n        var jsonObj = req.body;\r\n        var id = FieldService.addNewField(jsonObj);\r\n    });\r\n\r\n    // editing fields\r\n    this.router.put('/api/fields/:fieldId', (req, res) => {  \r\n        var jsonObj = req.body;\r\n        var id = FieldService.updateField(jsonObj);\r\n    });  \r\n  }\r\n\r\n}\r\n\r\n// Create the ListRouter, and export its configured Express.Router\r\nconst fieldRoutes = new FieldRouter();\r\nfieldRoutes.init();\r\n\r\nexport default fieldRoutes.router;"],"sourceRoot":".."}