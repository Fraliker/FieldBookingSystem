{"version":3,"sources":["../src/services/request-service.ts"],"names":[],"mappings":"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","file":"request-service.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport FieldModel from '../models/FieldModel';\r\nimport RequestModel from '../models/RequestModel';\r\nvar MailerService = require('../services/mailer-service');\r\n\r\n\r\nexport class RequestService {\r\n\r\n    private RequestModel: RequestModel;\r\n    public idGenerator:number;\r\n\r\n    public constructor() {\r\n        this.RequestModel = new RequestModel();\r\n        this.idGenerator = 0;\r\n    }\r\n\r\n    public retrieveRequests(response:any, adminId: number): any {\r\n        // logic to retrieve available Requests (mongo code)\r\n        var query = this.RequestModel.model\r\n                        .find({'field.admin.adminId': adminId})\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray) ;\r\n        });\r\n    }\r\n\r\n    public retrieveAllRequests(response: any) : any {\r\n        var query = this.RequestModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray);\r\n        });\r\n    }\r\n\r\n    public retrieveRequestDetails(response: any, filter:Object) {\r\n        var query = this.RequestModel.model.findOne(filter);\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray);\r\n        });\r\n    }\r\n\r\n    public retrieveUserRequests(response:any, userId: number): any {\r\n        // logic to retrieve available Requests (mongo code)\r\n        var query = this.RequestModel.model\r\n                        .find({'user.userId': userId})\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray) ;\r\n        });\r\n    }\r\n\r\n\r\n    public addRequest(response:any, jsonObj): any {\r\n\r\n        var query = this.RequestModel.model.find().sort({requestId:-1}).limit(1);\r\n        query.exec(function(err, itemArray) {\r\n            if (err || !itemArray.length) {\r\n                console.log('there was a problem');\r\n            }\r\n        }).then(item => {\r\n            jsonObj.requestId = <number>item[0]._doc.requestId + 1;\r\n            jsonObj.createdDateTime = new Date().toISOString();\r\n            this.RequestModel.model.create([jsonObj], (err) => {\r\n                if (err) {\r\n                    console.log('object creation failed');\r\n                } else {\r\n                    MailerService.sendEmail(response, jsonObj);\r\n                    response.json(jsonObj);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    public updateRequest(jsonObj): any {\r\n        // logic to retrieve available Requests (mongo code)\r\n        var query = this.RequestModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n        });\r\n    }\r\n\r\n    public setRequestStatus(status: string) {\r\n\r\n    }\r\n}\r\nmodule.exports = new RequestService();"],"sourceRoot":".."}