{"version":3,"sources":["../src/services/field-service.ts"],"names":[],"mappings":";;AACA,qDAA8C;AAE9C,IAAI,cAAc,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAK5D;IAKI;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,oBAAU,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC3B,CAAC;IAEM,uBAAuB,CAAC,QAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ;QAC3E,kDAAkD;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAC,CAAC,CAAC;QACvF,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,SAAS;YACvB;;;gBAGI;YAEJ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,WAAW,CAAC,OAAO;QACtB,kDAAkD;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,SAAS;QAE3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAW,CAAC,OAAO;QACtB,kDAAkD;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,SAAS;QAE3B,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;AAvCD,oCAuCC;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC","file":"field-service.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport FieldModel from '../models/FieldModel';\r\nimport DataAccess from '../data-access';\r\nvar RequestService = require('../services/request-service');\r\n\r\n\r\n\r\n\r\nexport class FieldService {\r\n\r\n    private FieldModel: FieldModel;\r\n    public idGenerator:number;\r\n    \r\n    public constructor() {\r\n        this.FieldModel = new FieldModel();\r\n        this.idGenerator = 100;\r\n    }\r\n\r\n    public retrieveAvailableFields(response:any, date, time, city, state, duration): any {\r\n       // logic to retrieve available fields (mongo code)\r\n       var query = this.FieldModel.model.find({'address.city': city, 'address.state': state});\r\n       query.exec( (err, itemArray) => {\r\n           /*for (let fields of itemArray){\r\n               var res;\r\n               RequestService.retrieveFieldRequests(res,fields.fieldId)\r\n           };*/\r\n           \r\n           response.json(itemArray);\r\n       });\r\n   }\r\n\r\n    public addNewField(jsonObj): any {\r\n        // logic to retrieve available fields (mongo code)\r\n        var query = this.FieldModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n            \r\n        });\r\n    }\r\n\r\n    public updateField(jsonObj): any {\r\n        // logic to retrieve available fields (mongo code)\r\n        var query = this.FieldModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n            \r\n        });\r\n    }\r\n    \r\n}\r\n\r\nmodule.exports = new FieldService();\r\n\r\n"],"sourceRoot":".."}