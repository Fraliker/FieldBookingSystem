{"version":3,"sources":["../src/services/sport-service.ts"],"names":[],"mappings":";;AACA,qDAA8C;AAG9C;IAKI;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,oBAAU,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC3B,CAAC;IAEM,iBAAiB,CAAC,QAAY;QACjC,kDAAkD;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,SAAS;YACvB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAE;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAjBD,oCAiBC;AACD,MAAM,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC","file":"sport-service.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport SportModel from '../models/SportModel';\r\nimport DataAccess from '../data-access';\r\n\r\nexport class SportService {\r\n\r\n    private SportModel: SportModel;\r\n    public idGenerator:number;\r\n    \r\n    public constructor() {\r\n        this.SportModel = new SportModel();\r\n        this.idGenerator = 100;\r\n    }\r\n\r\n    public retrieveAllSports(response:any): any {\r\n        // logic to retrieve available Sports (mongo code)\r\n        var query = this.SportModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray) ;\r\n        });\r\n    }\r\n}\r\nmodule.exports = new SportService();"],"sourceRoot":".."}