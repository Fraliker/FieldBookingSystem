{"version":3,"sources":["../src/services/fieldType-service.ts"],"names":[],"mappings":";;AACA,6DAAsD;AAGtD;IAKI;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,wBAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC3B,CAAC;IAEM,qBAAqB,CAAC,QAAY;QACrC,sDAAsD;QACtD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/C,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,SAAS;YACvB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAE;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAjBD,4CAiBC;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC","file":"fieldType-service.js","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\r\nimport FieldTypeModel from '../models/FieldTypeModel';\r\nimport DataAccess from '../data-access';\r\n\r\nexport class FieldTypeService {\r\n\r\n    private FieldTypeModel: FieldTypeModel;\r\n    public idGenerator:number;\r\n    \r\n    public constructor() {\r\n        this.FieldTypeModel = new FieldTypeModel();\r\n        this.idGenerator = 100;\r\n    }\r\n\r\n    public retrieveAllFieldTypes(response:any): any {\r\n        // logic to retrieve available FieldTypes (mongo code)\r\n        var query = this.FieldTypeModel.model.find({});\r\n        query.exec( (err, itemArray) => {\r\n            response.json(itemArray) ;\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = new FieldTypeService();"],"sourceRoot":".."}