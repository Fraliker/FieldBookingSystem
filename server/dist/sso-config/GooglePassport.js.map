{"version":3,"sources":["../src/sso-config/GooglePassport.ts"],"names":[],"mappings":";;AACA,mDAA4C;AAE5C,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,cAAc,GAAG,OAAO,CAAE,wBAAwB,CAAE,CAAC,QAAQ,CAAC;AAElE,8CAA8C;AAC9C;IAEI;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,mBAAS,EAAE,CAAC;QAEjC,QAAQ,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC;YAC5B,QAAQ,EAAC,0EAA0E;YACnF,YAAY,EAAE,0BAA0B;YACxC,WAAW,EAAE,qEAAqE;YAClF,iBAAiB,EAAE,IAAI;SAC1B,EACD,UAAS,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI;YACtD,2CAA2C;YAC3C,OAAO,CAAC,QAAQ,CAAC;gBAEjB,uEAAuE;gBACvE,0EAA0E;gBAC1E,uEAAuE;gBACvE,gCAAgC;gBAChC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC,CACA,CAAC,CAAC;QAEH,QAAQ,CAAC,aAAa,CAAC,UAAS,IAAI,EAAE,IAAI;YACtC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,UAAS,IAAI,EAAE,IAAI;YACxC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AACD,kBAAe,cAAc,CAAC","file":"GooglePassport.js","sourcesContent":["import googleAppAuth from './googleOauth2';\r\nimport UserModel from '../models/UserModel';\r\n\r\nlet passport = require('passport');\r\nvar GoogleStrategy = require( 'passport-google-oauth2' ).Strategy;\r\n\r\n// Creates a Passport configuration for Google\r\nclass GooglePassport {\r\n    private UserModel: UserModel;\r\n    constructor() {\r\n        this.UserModel = new UserModel();\r\n\r\n        passport.use(new GoogleStrategy({\r\n            clientID:'691794200081-f7p3au1e8o9aeotqqsn6mreqe8cbij20.apps.googleusercontent.com',\r\n            clientSecret: \"4WGSRYDLfBrfz2r3Ej6VcP3T\",\r\n            callbackURL: \"http://fieldfindersystemtest.azurewebsites.net/auth/google/callback\",\r\n            passReqToCallback: true\r\n        },\r\n        function(request, accessToken, refreshToken, profile, done) {\r\n            // asynchronous verification, for effect...\r\n            process.nextTick(function () {\r\n            \r\n            // To keep the example simple, the user's Google profile is returned to\r\n            // represent the logged-in user.  In a typical application, you would want\r\n            // to associate the Google account with a user record in your database,\r\n            // and return that user instead.\r\n            return done(null, profile);\r\n            });\r\n        }\r\n        ));\r\n\r\n        passport.serializeUser(function(user, done) {\r\n            done(null, user);\r\n        });\r\n\r\n        passport.deserializeUser(function(user, done) {\r\n            done(null, user);\r\n        });\r\n    }\r\n}\r\nexport default GooglePassport;"],"sourceRoot":".."}